
if [ '{guestOsType}' != 'windows9_64Guest' ]; then
    echo "This isn't windows 10, 3D isn't required"
else
    echo "Enabling 3D"

# Create the new VM
pwsh <<'EOF'
$ErrorActionPreference = "Stop"
Import-Module VMware.VimAutomation.Core

Connect-VIServer {vcenterHost.ip} `
    -User {vcenterUser.user} `
    -Password {vcenterUser.password}

$vm = Get-View -ViewType VirtualMachine -Filter @{'Name'="^{virtualMachine.fqn}$"}
 
$spec = New-Object VMware.Vim.VirtualMachineConfigSpec
$dc = New-Object VMware.Vim.VirtualDeviceConfigSpec
$dc.Operation = 'edit'
$dev = $vm.Config.Hardware.Device | where{$_ -is [VMware.Vim.VirtualMachineVideoCard]}
$dev.enable3DSupport = $true
$dc.Device += $dev
$spec.DeviceChange += $dc
$vm.ReconfigVM($spec)

EOF

fi
